package com.collaboration.controller;

import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.collaboration.dao.UserDetailsDAO;
import com.collaboration.model.UserDetails;

@RestController
public class UserController 
{
	@Autowired
	UserDetailsDAO userDetailsDAO;
	
	@PostMapping(value="/registerUser")
	public ResponseEntity<String> registerUser(@RequestBody UserDetails userDetails)
	{
		System.out.println("Registeration");
		if(userDetailsDAO.addUser(userDetails))
			{
				return new ResponseEntity<String>("User Added",HttpStatus.OK);
			}
			else
			{
				return new ResponseEntity<String>("Error in Response Entity",HttpStatus.INTERNAL_SERVER_ERROR);
			}
		
	}
	@PostMapping(value="/login")
	public ResponseEntity<UserDetails> checkLogin(@RequestBody UserDetails userDetails,HttpSession session)
	{
		System.out.println("login inside");
		if(userDetailsDAO.checkLogin(userDetails))
			{
			    System.out.println("Logging");
			    UserDetails tempUser=userDetailsDAO.getUser(userDetails.getUsername());
			    userDetailsDAO.updateOnlineStatus("A",tempUser);
			    session.setAttribute("currentUser",userDetails.getUsername());
				return new ResponseEntity<UserDetails>(tempUser,HttpStatus.OK);
			}
			else
			{
				return new ResponseEntity<UserDetails>(userDetails,HttpStatus.INTERNAL_SERVER_ERROR);
			}
		
	}
	
	@GetMapping(value="/logout/{username}")
	public ResponseEntity<String> loggingOut(@PathVariable("username")String username1)
	{
		UserDetails userDetails=userDetailsDAO.getUser(username1);
		
		if(userDetailsDAO.updateOnlineStatus("N", userDetails))
		{
			return new ResponseEntity<String>("Successful LoggedOut",HttpStatus.OK);
		}
		else
		{
			return new ResponseEntity<String>("Error in LoggedOut",HttpStatus.INTERNAL_SERVER_ERROR);
		}
		
	}
	@RequestMapping(value = "/getAllUsers", method = RequestMethod.GET, headers = "Accept=application/json")
	public List<UserDetails> getAllUsers() {
		return userDetailsDAO.getAllUsers();
	}
}